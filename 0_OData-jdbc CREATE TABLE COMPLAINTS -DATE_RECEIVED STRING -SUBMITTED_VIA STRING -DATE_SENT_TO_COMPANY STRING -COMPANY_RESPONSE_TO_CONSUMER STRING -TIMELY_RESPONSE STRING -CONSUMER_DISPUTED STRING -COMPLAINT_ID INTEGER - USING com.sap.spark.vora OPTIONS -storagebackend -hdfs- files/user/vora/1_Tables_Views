%jdbc CREATE TABLE IF NOT EXISTS COMPLAINTS_TEST
(DATE_RECEIVED STRING
,SUBMITTED_VIA STRING
,DATE_SENT_TO_COMPANY STRING
,COMPANY_RESPONSE_TO_CONSUMER STRING
,TIMELY_RESPONSE STRING
,CONSUMER_DISPUTED STRING
,COMPLAINT_ID INTEGER )
USING com.sap.spark.vora
OPTIONS (storagebackend "hdfs", files "/user/vora/complaints_s.csv", format "csv", csvskip "1")

%jdbc SELECT * FROM COMPLAINTS_TEST

%jdbc SHOW TABLES USING com.sap.spark.vora

%jdbc REGISTER ALL TABLES USING com.sap.spark.vora IGNORING CONFLICTS

%jdbc DROP TABLE COMPLAINTS_TEST

%jdbc CREATE VIEW COMPLAINTS_PRODUCTS AS
SELECT COMPLAINTS.COMPLAINT_ID , PRODUCT  
FROM  COMPLAINTS
INNER JOIN PRODUCTS 
ON COMPLAINTS.COMPLAINT_ID = PRODUCTS.COMPLAINT_ID

%jdbc SELECT * FROM COMPLAINTS_PRODUCTS

%jdbc CREATE VIEW NUMCOMPLAINTS_PERSTATE_PERPRODUCT AS
SELECT PRODUCT , STATE , COUNT(PRODUCTS.COMPLAINT_ID) AS NUM_OF_COMPLAINTS  
FROM  PRODUCTS
	INNER JOIN FINANCIAL_INS 
	ON PRODUCTS.COMPLAINT_ID = FINANCIAL_INS.COMPLAINT_ID 
GROUP BY PRODUCT, STATE 
ORDER BY NUM_OF_COMPLAINTS DESC

%jdbc SELECT * FROM NUMCOMPLAINTS_PERSTATE_PERPRODUCT

%jdbc DROP VIEW COMPLAINTS_PRODUCTS

%jdbc CREATE DIMENSION VIEW PRODUCT_DIM AS 
SELECT PRODUCT  @(AnalyticsDetails.drillDownEnablement='DRILL_DOWN') , SUB_PRODUCT  @(AnalyticsDetails.drillDownEnablement='DRILL_DOWN') , COMPLAINT_ID  
FROM  PRODUCTS

%jdbc SELECT * FROM PRODUCT_DIM

%jdbc SELECT * FROM DESCRIBE_TABLE (SELECT * FROM PRODUCT_DIM)

%jdbc CREATE CUBE VIEW PROD_FININS_CUBE AS
SELECT PRODUCT , COUNT(PR_DIM.COMPLAINT_ID) AS COMPLAINT_ID , COMPANY  
FROM  PRODUCT_DIM PR_DIM
	INNER JOIN FINANCIAL_INS
	ON PR_DIM.COMPLAINT_ID = FINANCIAL_INS.COMPLAINT_ID 
GROUP BY PRODUCT, COMPANY 
ORDER BY COMPLAINT_ID DESC

%jdbc SELECT * FROM PROD_FININS_CUBE

%jdbc SELECT * FROM DESCRIBE_TABLE (SELECT * FROM PROD_FININS_CUBE)

